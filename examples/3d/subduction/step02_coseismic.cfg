# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# We simulate postseismic viscoelastic relaxation from coseismic slip
# on a patch in the middle of the top of the slab.
#
# Materials
#   The 'wedge' and 'crust' blocks use the the linear, isotropic
#   elastic material model, whereas the 'slab' and 'mantle' use the
#   linear Maxwell viscoelastic material model (mat_viscoelastic.cfg).
#
# Boundary Conditions
#   Roller boundary conditions (pylithapp.cfg).
#
# Fault
#   Uniform oblique slip on the slab_top fault rupture patch.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# Parameter files:
#   - pylithapp.cfg (common paramters, read by default)
#   - step02_coseismic.cfg (main parameter file for step02)
#   - mat_viscoelastic.cfg (material models and parameters)
#   - solver_fieldsplit.cfg (field split solver settings)
#
# We use the field split preconditioner with algebraic multigrid for
# the displacement fields and the custom preconditioner for the
# Lagrange multiplier field. We use these solver settings in several
# simulations, so we put them in a separate file.
#
# TO RUN THE SIMULATION:
#   pylith step02_coseismic.cfg mat_viscoelastic.cfg solver_fieldsplit.cfg
#
# Output will be directed to the "output" directory.

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step02_coseismic-parameters.json
problem.progress_monitor.filename = output/step02_coseismic-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step02_coseismic

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Define the total time for the simulation, the start time, and the
# initial time step size.
initial_dt = 10.0*year
start_time = -10.0*year
end_time = 200.0*year

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the discretization for each of the solution subfields.
#
# For a quastistatic simulation with a fault, we have two solution fields:
# (1) displacement and (2) Lagrange multiplier. We use a predefined containter
# to create a solution field with these two subfields.
solution = pylith.problems.SolnDispLagrange

[pylithapp.problem.solution.subfields]
displacement.basis_order = 1
lagrange_fault.basis_order = 1

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.problem]
# We prescribe slip on the slab fault patch.
interfaces = [slab_top]

[pylithapp.problem.interfaces]
slab_top = pylith.faults.FaultCohesiveKin ; Default

[pylithapp.problem.interfaces.slab_top]
id = 100
label = fault_slabtop_patch ; Nodeset for the entire fault surface
edge = fault_slabtop_patch_edge ; Nodeset for the buried edges

observers.observer.data_fields = [slip]

# The slip time and final slip are defined in spatial databases.
[pylithapp.problem.interfaces.slab_top.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Coseismic slip
db_auxiliary_field.values = [final_slip_left_lateral, final_slip_reverse, final_slip_opening, initiation_time]
db_auxiliary_field.data = [-1.0*m, 4.0*m, 0.0*m, 9.999*year ]


# End of file
