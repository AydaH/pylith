[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
isotropiclinearelastic = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
initial_dt = 1.0*year
start_time = 0.0*year
end_time = 1.0*year
normalizer.relaxation_time = 1.0*year
normalizer.shear_modulus = 2.25*GPa

defaults.quadrature_order = 2
defaults.output_field_filter = pylith.meshio.FieldFilterProject

[pylithapp.problem.solution.subfields.displacement]
basis_order = 2

[pylithapp.problem]
solution_observers = [domain]

[pylithapp.problem.solution_observers.domain]
field_filter = pylith.meshio.FieldFilterProject

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set bc to an array of 6 boundary conditions:
# bc = [bc_xneg,bc_yneg,bc_inner,bc_outer,bc_zneg,bc_zpos]
bc = [bc_xneg,bc_yneg,bc_inner,bc_zneg,bc_zpos]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_yneg = pylith.bc.DirichletTimeDependent
bc.bc_inner = pylith.bc.NeumannTimeDependent
# bc.bc_outer = pylith.bc.NeumannTimeDependent
bc.bc_zneg = pylith.bc.DirichletTimeDependent
bc.bc_zpos = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.bc_xneg]
constrained_dof = [0]
label = boundary_xneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -x

auxiliary_subfields.initial_amplitude.basis_order = 1

# observers.observer.field_filter = pylith.meshio.FieldFilterProject
# observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_yneg]
constrained_dof = [1]
label = boundary_yneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y

auxiliary_subfields.initial_amplitude.basis_order = 1

# observers.observer.field_filter = pylith.meshio.FieldFilterProject
# observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_zneg]
constrained_dof = [2]
label = boundary_zneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -z

auxiliary_subfields.initial_amplitude.basis_order = 1

# observers.observer.field_filter = pylith.meshio.FieldFilterProject
# observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_zpos]
constrained_dof = [2]
label = boundary_zpos
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +z

auxiliary_subfields.initial_amplitude.basis_order = 1

# observers.observer.field_filter = pylith.meshio.FieldFilterProject
# observers.observer.data_fields = [displacement]

# [pylithapp.problem.bc.bc_inner]
# label = boundary_inner
# db_auxiliary_field = spatialdata.spatialdb.UniformDB
# db_auxiliary_field.label = Neumann BC on inner boundary
# db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2,  initial_amplitude_normal]
# db_auxiliary_field.data = [0.0*Pa, 0.0*Pa, -10.0*MPa]

# auxiliary_subfields.initial_amplitude.basis_order = 2

# observers.observer.field_filter = pylith.meshio.FieldFilterProject
# observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_inner]
label = boundary_inner
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC on inner boundary
db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2,  initial_amplitude_normal]
db_auxiliary_field.data = [0.0*Pa, 0.0*Pa, -100.0*MPa]

# auxiliary_subfields.initial_amplitude.basis_order = 1
auxiliary_subfields.initial_amplitude.basis_order = 2

observers.observer.field_filter = pylith.meshio.FieldFilterProject
# observers.observer.data_fields = [displacement]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
ksp_monitor_true_residual = true
snes_test_jacobian = true
snes_test_jacobian_view = true


# End of file
